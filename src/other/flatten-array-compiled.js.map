{"version":3,"sources":["flatten-array.js"],"names":[],"mappings":"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","file":"flatten-array-compiled.js","sourcesContent":["/**\n * Created by joebm08 on 1/9/16.\n * \n * FLATTEN ARRAY\n * Given the folowing input produce the output. \n *  var input = [1, {a:[2,3]}, 4, [5,[6],[20,[21,[22,23,[24]]],25,26,27,[28],[29,[30]]]],7,[8,[9,[10]],[11]]];\n    var output = [1, {a:[2,3]},4,5, 6, 7, 8, 9, 10];\n */\n\nvar input = [1, {a:[2,3]}, 4, [5,[6],[20,[21,[22,23,[24]]],25,26,27,[28],[29,[30]]]],7,[8,[9,[10]],[11]]];\nvar input2 = [[5,[6],[20,[21,[22,23,[24]]],25,26,27,[28]]]];\nvar output = [1, {a:[2,3]},4,5, 6, 7, 8, 9, 10];\n\nfunction flattenArray(arr){\n    var initArray = [];\n    flattenArrayRecursive(arr, initArray);\n\n    return initArray;\n}\nfunction flattenArrayRecursive(val, initArray){\n    if(!Array.isArray(val)){\n        initArray.push(val);\n    } else{\n        val.forEach(function(item){\n            flattenArrayRecursive(item, initArray);\n        });\n    }\n}\n\n\nfunction flattenArrayNonRecursive(arr){\n    var outPutArray = [],\n        stackArray = [],\n        temp, i, vl;\n\n    arr.forEach(function(item){\n        if(!Array.isArray(item)){\n            outPutArray.push(item);\n        } else{\n            item.forEach(function(vals){\n                if(!Array.isArray(vals)){\n                    outPutArray.push(vals);\n\n                } else{\n                    stackArray.push(vals);\n                }\n\n                while(stackArray.length){\n\n                    // get the array put in the stack\n                    temp = stackArray.pop();\n                    if(!Array.isArray(temp)){\n                        // get the index in the stack\n                        i = temp.i;\n                        temp = temp.a;\n                    } else{\n                        i = 0;\n                    }\n\n                    while(i < temp.length){\n                        vl = temp[i];\n                        if(!Array.isArray(vl)){\n                            outPutArray.push(vl);\n                        } else{\n                            // store the index and the array we left at\n                            stackArray.push({i:++i, a:temp});\n\n                            // store the new array\n                            stackArray.push(vl);\n                            break;\n                        }\n\n                        i++;\n                    }\n\n                }\n            });\n\n        }\n    });\n\n\n    return outPutArray;\n}\n\n\n\nconsole.log(flattenArrayNonRecursive(input)); "]}