{"version":3,"sources":["hashmap-link-list.js"],"names":[],"mappings":"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","file":"hashmap-link-list-compiled.js","sourcesContent":["// HashMap Implementation with LinkedList\n\nfunction Node(key, val){\n    this.key = key;\n    this.val = val;\n    this.next = null;\n}\n\nfunction LinkedList(key, val){\n    this.head = new Node(key, val);\n}\n\nLinkedList.prototype = {\n    push:push,\n    pop:pop,\n    retrieve:retrieve\n};\n\nfunction push(key, val){\n    var head = this.head;\n\n    if(!head){\n        head = new Node(key, val);\n        return;\n    }\n\n    var temp = head;\n    while(temp.next){\n        if(temp.key === key){\n            temp.val = val;\n            return;\n        }\n\n        temp = temp.next;\n    }\n\n    temp.next = new Node(key, val);\n}\n\nfunction pop(){\n    var head = this.head;\n    this.head = head.next;\n    head.next = null;\n\n    return head;\n}\n\nfunction retrieve(key){\n    var head = this.head;\n\n    if(head.key === key){\n        return head.val;\n    }\n\n    var temp = head.next;\n    while(temp){\n        if(temp.key === key){\n            return temp.val;\n        }\n\n        temp = temp.next;\n    }\n\n    return undefined;\n}\n\nfunction log(ll){\n    console.log(ll.key+\", \"+ll.val);\n    var list = ll.next;\n    while(list){\n        console.log(list.key+\", \"+list.val);\n        list = list.next;\n    }\n}\n\n// var ll = new LinkedList(\"a\",'0');\n// ll.push(\"b\",'1');\n// ll.push(\"c\",'2');\n// ll.push(\"d\",'3');\n// ll.push(\"12\",'ab');\n// ll.push(\"34\",'cd');\n// ll.push(\"56\",'ef');\n\n\n// log(ll.head);\n\nfunction HashMap(){\n    this.size = 2;\n    this.arr = new Array(this.size);\n}\n\nHashMap.prototype = {\n    set:set,\n    get:get,\n    hash:hash,\n    keySum:keySum\n};\n\nfunction set(key, val){ \n    var self = this,\n        index = self.hash(key),\n        ll = self.arr[index];\n\n    if(!ll){\n        self.arr[index] = new LinkedList(key, val);\n    } else {\n        ll.push(key, val);\n    }\n\n    return self;\n}\n\nfunction get(key){\n    var self = this,\n        index = self.hash(key),\n        ll = self.arr[index];\n\n    if(!ll){\n        return undefined;\n    }\n\n    return ll.retrieve(key);\n}\n\nfunction hash(key){\n    var self = this;\n    var index = self.keySum(key) % self.size;\n    return index;\n}\n\nfunction keySum(key){\n    var counter = 0;\n    for(var i = 0; i < key.length; i++){\n        counter += key.charCodeAt(i);\n    }\n\n    return counter;\n}\n\nvar hm = new HashMap();\nhm.set('name','Joe Buza')\n    .set('age','27')\n    .set('height','5:10')\n    .set(\"b\",'1')\n    .set(\"c\",'2')\n    .set(\"d\",'3')\n    .set(\"12\",'ab')\n    .set(\"34\",'cd')\n    .set(\"56\",'ef')\n    .set('name','John Miller');\n\n//console.log(JSON.stringify(hm.arr)); \nconsole.log(hm.get('name')); \n"]}