{"version":3,"sources":["palindrome.js"],"names":[],"mappings":";;AAAA,IAAI,IAAI,GAAG,CAAC;AACR,YAAQ,EAAE,IAAI;AACd,OAAG,EAAE,KAAK;CACb,EAAE;AACC,YAAQ,EAAE,IAAI;AACd,OAAG,EAAE,SAAS;CACjB,EAAE;AACC,YAAQ,EAAE,KAAK;AACf,OAAG,EAAE,GAAG;CACX,EAAE;AACC,YAAQ,EAAE,KAAK;AACf,OAAG,EAAE,IAAI;CACZ,EAAE;AACC,YAAQ,EAAE,IAAI;AACd,OAAG,EAAE,IAAI;CACZ,EAAE;AACC,YAAQ,EAAE,KAAK;AACf,OAAG,EAAE,EAAE;CACV,CAAC,CAAC;;AAEH,cAAc,CAAC,IAAI,CAAC,CAAC;;AAErB,SAAS,cAAc,CAAC,EAAE,EAAE;AACxB,MAAE,CAAC,OAAO,CAAC,UAAS,GAAG,EAAE;AACrB,YAAI,KAAK,GAAG,YAAY,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AAClC,eAAO,CAAC,GAAG,SAAO,GAAG,CAAC,GAAG,iCAA4B,KAAK,mBAAc,GAAG,CAAC,QAAQ,QAAK,CAAC;KAC7F,CAAC,CAAC;CACN;;AAED,SAAS,YAAY,CAAC,CAAC,EAAE;;AAErB,QAAG,CAAC,CAAC,MAAM,GAAG,CAAC,EAAC;AACZ,eAAO,KAAK,CAAC;KAChB;;AAED,QAAI,MAAM,GAAG,CAAC,CAAC,MAAM;QACjB,KAAK,GAAG,CAAC;QACT,GAAG,GAAG,MAAM,GAAG,CAAC,CAAC;;AAErB,WAAO,KAAK,GAAG,GAAG,EAAE;AAChB,YAAI,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,GAAG,GAAC,KAAK,CAAC,EAAE;AACzC,mBAAO,KAAK,CAAC;SAChB;AACD,aAAK,EAAE,CAAC;KACX;;AAED,WAAO,IAAI,CAAC;CACf","file":"palindrome-compiled.js","sourcesContent":["var pals = [{\n    expected: true,\n    val: 'aba'\n}, {\n    expected: true,\n    val: 'abcdcba'\n}, {\n    expected: false,\n    val: 'a'\n}, {\n    expected: false,\n    val: 'ab'\n}, {\n    expected: true,\n    val: 'bb'\n}, {\n    expected: false,\n    val: ''\n}];\n\ntestPalindrome(pals);\n\nfunction testPalindrome(ts) {\n    ts.forEach(function(pal) {\n        var isPal = isPalindrome(pal.val);\n        console.log(`is ${pal.val} palindrome? \\n returned ${isPal}: expected ${pal.expected}\\n`);\n    });\n}\n\nfunction isPalindrome(x) {\n\n    if(x.length < 2){\n        return false;\n    }\n\n    var length = x.length,\n        start = 0,\n        end = length - 1;\n    \n    while (start < end) {\n        if (x.charAt(start) !== x.charAt(end-start)) {\n            return false;\n        }\n        start++;\n    }\n    \n    return true;\n}"]}